Best Practices for Creating Strong Passwords
===========================================

1. Use at least 12–16 characters
   - Longer passwords are exponentially harder to crack.

2. Mix character types
   - Include:
     * Uppercase letters (A–Z)
     * Lowercase letters (a–z)
     * Numbers (0–9)
     * Symbols (!@#$%^&*())

3. Avoid common words and predictable patterns
   - Don’t use: password, 123456, qwerty, admin
   - Avoid names, birthdays, or keyboard sequences (e.g., asdf, zxcvbn)

4. Use passphrases
   - Combine unrelated words with symbols or numbers
   - Example: L!tt13_Blu3_H0rse
   - Easy to remember but difficult to guess

5. Don’t reuse passwords
   - Use a unique password for every account to prevent "credential stuffing"

6. Change passwords only when necessary
   - Only change them if there’s a breach, you've shared it, or policy requires it

7. Enable multi-factor authentication (MFA)
   - Adds a second layer of protection (e.g., phone code or authenticator app)

8. Don’t write passwords down or share them
   - If necessary, use an encrypted file or secure password manager
   - Never use sticky notes or plain text files


Tips Learned from Password Strength Evaluation
=============================================

1. Passwords with 12–16+ characters take exponentially longer to crack.

2. Combining uppercase, lowercase, numbers, and symbols increases security.

3. Avoid using real words or common phrases
   - Passwords like "password123" or "letmein!" are easily guessed in dictionary attacks.

4. Random sequences or character substitutions (e.g., “X9m$4P&1Zbq!w”) increase unpredictability.

5. Passphrases can be both strong and memorable
   - Example: "L!tt13_Blu3_H0rse" — long, unique, and easy to remember.

6. Changing “a” to “@” or “o” to “0” in common words may not fool modern password crackers.

7. Even with symbols, short passwords (under 8 characters) are vulnerable to brute-force attacks.

8. Multi-factor authentication (MFA) adds an essential extra layer of protection even if your password is compromised.

Common Password Attacks
=======================

1. Brute Force Attack
---------------------
- Method: Tries every possible character combination until it finds the correct password.
- Tools: Automated programs like Hydra or John the Ripper.
- Risk: Weak, short passwords (e.g., "1234", "abcd") can be cracked in seconds.
- Defense: Use long, complex passwords with many character types.

2. Dictionary Attack
--------------------
- Method: Tries passwords from a precompiled list of common words and phrases.
- Example: "password", "letmein", "qwerty", etc.
- Risk: Real words, names, and simple patterns are highly vulnerable.
- Defense: Avoid dictionary words; use non-obvious passphrases or random characters.

3. Credential Stuffing
----------------------
- Method: Attackers use leaked username-password pairs from one site to access others.
- Risk: Reused passwords across accounts make this attack very effective.
- Defense: Always use unique passwords for each account.

4. Phishing
-----------
- Method: Tricks users into revealing their passwords via fake emails or websites.
- Risk: Even the strongest password can be stolen if entered on a fake site.
- Defense: Be cautious with links and always verify sites; use MFA.

5. Keylogging
-------------
- Method: Malware records everything typed on a keyboard.
- Risk: Captures passwords regardless of their complexity.
- Defense: Keep systems updated and use antivirus software.

6. Rainbow Table Attack
-----------------------
- Method: Uses precomputed tables of hashed passwords to find matches.
- Risk: Affects unsalted password hashes stored insecurely.
- Defense: Websites should use salting and strong hashing algorithms.

------------------------------------------------------------

How Password Complexity Affects Security
========================================

1 **Length matters most**: Each added character makes brute-force attacks significantly harder.
  Example: A 6-character password might be cracked in minutes; a 16-character one could take millions of years.

2 **Character diversity increases entropy**:
  Including uppercase, lowercase, numbers, and symbols makes the password less predictable and increases combinations.

3 **Randomness defeats patterns**:
  Using random or unique combinations (not names or words) reduces the chance of success for dictionary and pattern-based attacks.

4 **Passphrases are effective**:
  Combining several unrelated words (e.g., "Sunflower$Engine32Sky") is easier to remember and hard to crack.